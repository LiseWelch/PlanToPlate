// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.Models;

namespace Project.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20191122180717_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Project.Models.Breakfast", b =>
                {
                    b.Property<int>("BreakfastID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DayID");

                    b.Property<int>("RecipeID");

                    b.HasKey("BreakfastID");

                    b.HasIndex("DayID");

                    b.HasIndex("RecipeID");

                    b.ToTable("Breakfasts");
                });

            modelBuilder.Entity("Project.Models.Day", b =>
                {
                    b.Property<int>("DayID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("UserID");

                    b.Property<int>("WeekID");

                    b.Property<DateTime>("date");

                    b.HasKey("DayID");

                    b.HasIndex("UserID");

                    b.HasIndex("WeekID");

                    b.ToTable("Days");
                });

            modelBuilder.Entity("Project.Models.Dinner", b =>
                {
                    b.Property<int>("DinnerID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DayID");

                    b.Property<int>("RecipeID");

                    b.HasKey("DinnerID");

                    b.HasIndex("DayID");

                    b.HasIndex("RecipeID");

                    b.ToTable("Dinners");
                });

            modelBuilder.Entity("Project.Models.GIAssoc", b =>
                {
                    b.Property<int>("GIAssocID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AmountInt");

                    b.Property<string>("AmountString")
                        .IsRequired();

                    b.Property<int>("IngriedientID");

                    b.Property<int>("ListID");

                    b.HasKey("GIAssocID");

                    b.HasIndex("IngriedientID");

                    b.HasIndex("ListID");

                    b.ToTable("GIAssoc");
                });

            modelBuilder.Entity("Project.Models.GUAssoc", b =>
                {
                    b.Property<int>("GUAssocID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ListID");

                    b.Property<int>("UserID");

                    b.HasKey("GUAssocID");

                    b.HasIndex("ListID");

                    b.HasIndex("UserID");

                    b.ToTable("GUAssoc");
                });

            modelBuilder.Entity("Project.Models.GroceryList", b =>
                {
                    b.Property<int>("ListID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CreatorID");

                    b.Property<string>("ListName")
                        .IsRequired();

                    b.HasKey("ListID");

                    b.HasIndex("CreatorID");

                    b.ToTable("GroceryList");
                });

            modelBuilder.Entity("Project.Models.Ingriedient", b =>
                {
                    b.Property<int>("IngriedientID")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("AmountNum");

                    b.Property<string>("AmountString")
                        .IsRequired();

                    b.Property<string>("CreatedId");

                    b.Property<int?>("GroceryListListID");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("IngriedientID");

                    b.HasIndex("GroceryListListID");

                    b.ToTable("Ingriedients");
                });

            modelBuilder.Entity("Project.Models.Lunch", b =>
                {
                    b.Property<int>("LunchID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DayID");

                    b.Property<int>("RecipeID");

                    b.HasKey("LunchID");

                    b.HasIndex("DayID");

                    b.HasIndex("RecipeID");

                    b.ToTable("Lunches");
                });

            modelBuilder.Entity("Project.Models.RIAssoc", b =>
                {
                    b.Property<int>("RIAssocID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("IngriedientID");

                    b.Property<int>("RecipeID");

                    b.HasKey("RIAssocID");

                    b.HasIndex("IngriedientID");

                    b.HasIndex("RecipeID");

                    b.ToTable("RIAssocs");
                });

            modelBuilder.Entity("Project.Models.RUAssoc", b =>
                {
                    b.Property<int>("RUAssocID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("RecipeID");

                    b.Property<int>("UserID");

                    b.HasKey("RUAssocID");

                    b.HasIndex("RecipeID");

                    b.HasIndex("UserID");

                    b.ToTable("RUAssoc");
                });

            modelBuilder.Entity("Project.Models.Recipe", b =>
                {
                    b.Property<int>("RecipeID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedID");

                    b.Property<int>("CreatorID");

                    b.Property<string>("Instructions");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("PrepTimeInt");

                    b.Property<string>("PrepTimeString")
                        .IsRequired();

                    b.HasKey("RecipeID");

                    b.HasIndex("CreatorID");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("Project.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<int>("NextWeekID");

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<int>("ThisWeekID");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Project.Models.Week", b =>
                {
                    b.Property<int>("WeekID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("UserID");

                    b.HasKey("WeekID");

                    b.HasIndex("UserID");

                    b.ToTable("Weeks");
                });

            modelBuilder.Entity("Project.Models.Breakfast", b =>
                {
                    b.HasOne("Project.Models.Day", "day")
                        .WithMany("breakfast")
                        .HasForeignKey("DayID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Project.Models.Recipe", "recipe")
                        .WithMany()
                        .HasForeignKey("RecipeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Project.Models.Day", b =>
                {
                    b.HasOne("Project.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Project.Models.Week", "week")
                        .WithMany("days")
                        .HasForeignKey("WeekID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Project.Models.Dinner", b =>
                {
                    b.HasOne("Project.Models.Day", "day")
                        .WithMany("dinner")
                        .HasForeignKey("DayID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Project.Models.Recipe", "recipe")
                        .WithMany()
                        .HasForeignKey("RecipeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Project.Models.GIAssoc", b =>
                {
                    b.HasOne("Project.Models.Ingriedient", "ingriedient")
                        .WithMany("gList")
                        .HasForeignKey("IngriedientID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Project.Models.GroceryList", "gList")
                        .WithMany("ingriedients")
                        .HasForeignKey("ListID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Project.Models.GUAssoc", b =>
                {
                    b.HasOne("Project.Models.GroceryList", "gList")
                        .WithMany("users")
                        .HasForeignKey("ListID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Project.Models.User", "user")
                        .WithMany("InvitedLists")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Project.Models.GroceryList", b =>
                {
                    b.HasOne("Project.Models.User", "Creator")
                        .WithMany("CreatedLists")
                        .HasForeignKey("CreatorID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Project.Models.Ingriedient", b =>
                {
                    b.HasOne("Project.Models.GroceryList")
                        .WithMany("Items")
                        .HasForeignKey("GroceryListListID");
                });

            modelBuilder.Entity("Project.Models.Lunch", b =>
                {
                    b.HasOne("Project.Models.Day", "day")
                        .WithMany("lunch")
                        .HasForeignKey("DayID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Project.Models.Recipe", "recipe")
                        .WithMany()
                        .HasForeignKey("RecipeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Project.Models.RIAssoc", b =>
                {
                    b.HasOne("Project.Models.Ingriedient", "ingriedient")
                        .WithMany("recipes")
                        .HasForeignKey("IngriedientID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Project.Models.Recipe", "recipe")
                        .WithMany("ingriedients")
                        .HasForeignKey("RecipeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Project.Models.RUAssoc", b =>
                {
                    b.HasOne("Project.Models.Recipe", "recipe")
                        .WithMany("LikedBy")
                        .HasForeignKey("RecipeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Project.Models.User", "user")
                        .WithMany("LikedResipes")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Project.Models.Recipe", b =>
                {
                    b.HasOne("Project.Models.User", "Creator")
                        .WithMany("CreatedRecipes")
                        .HasForeignKey("CreatorID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Project.Models.Week", b =>
                {
                    b.HasOne("Project.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
